/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.VenueManagerRole;


import Sports.EcoSystem;
import Sports.Sport.Match;
import Sports.Sport.Sport;
import Sports.Sport.SportDirectory;
import Sports.User.UserAccount;
import Sports.Venue.VenueDirectory;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anveshvarma
 */  
public class ViewScheduledMatchesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewScheduledMatchesJPanel
     */
    JPanel container;
    EcoSystem ecosystem;
    UserAccount ua;
    VenueDirectory vd;
    SportDirectory sd;
    Date date;
    public ViewScheduledMatchesJPanel(JPanel container,UserAccount ua, EcoSystem ecosystem) {
        initComponents();
        this.container = container;
        this.ecosystem = ecosystem;
        this.ua = ua;
        vd = ecosystem.getEnterpriseDirectory().getVenueDirectory();
        //date.setText(" "+String.valueOf(LocalTime.now().getHour()) + ":"+String.valueOf(LocalTime.now().getMinute()));
        sd = ecosystem.getEnterpriseDirectory().getSportsDirectory();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblScd = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        tblScd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblScd);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CardLayout crdLyt = (CardLayout) container.getLayout();
            crdLyt.show(container,"venueManager");
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblScd;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        ArrayList<Sport> sports = sd.getSportsList();
        DefaultTableModel df = (DefaultTableModel) tblScd.getModel();
        df.setRowCount(0);
        String date;
        ArrayList<Match> matches;
        for(Sport s: sports)
        {
           if(s.getMatches() == null) s.setMatches(new ArrayList<Match>());
           matches = s.getMatches();
           for(Match m: matches)
           {
               if(m.getVenue() == null) continue;
               if(m.getVenue().getUserAccount().equals(ua))
               {
                   if(m.getVenueStatus().equals("Scheduled")){
                   DateFormat datef = new SimpleDateFormat("dd-MMM-yyyy");
                   date = datef.format(m.getDate());
                   String match = m.getTeam1().getTeamName() +" vs "+ m.getTeam2().getTeamName();
                   String[] row = {date,match,m.getTeam1().getUserAccount().getEmail()
                           ,m.getTeam2().getUserAccount().getEmail(),s.getSportName()};
                   df.addRow(row);}
                }
            }
        }
        tblScd.setModel(df);
       }
    
     
    }

