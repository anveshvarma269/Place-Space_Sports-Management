/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AdminRole;


import Sports.EcoSystem;
import Sports.Sport.Match;
import Sports.Sport.Sport;
import Sports.Sport.SportDirectory;
import Sports.Team.Team;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anveshvarma
 */
public class ManageChampionshipJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageChampionshipJPanel
     */
    JPanel container;
    EcoSystem ecosystem;
    SportDirectory sd;
    public ManageChampionshipJPanel(JPanel container, EcoSystem ecosystem) {
        initComponents();
        this.container = container;
        this.ecosystem = ecosystem;
        sd = ecosystem.getEnterpriseDirectory().getSportsDirectory();
        populateSelect();
        populateScheduleTable();
        populateStandingsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStandings = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cmbStandingSport = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblScdStatus = new javax.swing.JTextField();
        cmbSscheduleSport = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSchedule = new javax.swing.JTable();
        btnGenerateSchedule = new javax.swing.JButton();
        btnGenKnockout = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtNoOfTeam = new javax.swing.JTextField();

        jTabbedPane1.setFont(new java.awt.Font("Avenir", 0, 18)); // NOI18N

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkGradientFocus(700);
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 153, 153));

        tblStandings.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        tblStandings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Team", "Matches Played", "Matches Won", "Matches Lost", "Points"
            }
        ));
        jScrollPane2.setViewportView(tblStandings);

        jLabel2.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        jLabel2.setText("Select Sport:");

        cmbStandingSport.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        cmbStandingSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStandingSportActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Avenir Next", 1, 36)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Team Ranking");

        jButton1.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 629, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cmbStandingSport, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18))))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(92, 92, 92)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbStandingSport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(90, 90, 90)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        jPanel2.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -30, 1300, 650));

        jTabbedPane1.addTab("Standings", jPanel2);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Avenir Next", 1, 36)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Create Schedule");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 47, 654, -1));

        kGradientPanel2.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkStartColor(new java.awt.Color(255, 153, 153));

        jLabel1.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Select Sport:");

        jLabel4.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Schedule Status:");

        lblScdStatus.setEditable(false);
        lblScdStatus.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N

        cmbSscheduleSport.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        cmbSscheduleSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSscheduleSportActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblSchedule.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        tblSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Match Number", "Round", "Team 1", "Team 2", "Venue", "Date"
            }
        ));
        jScrollPane1.setViewportView(tblSchedule);

        btnGenerateSchedule.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        btnGenerateSchedule.setText("Generate Schedule");
        btnGenerateSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateScheduleActionPerformed(evt);
            }
        });

        btnGenKnockout.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N
        btnGenKnockout.setText("Generate Knockout");
        btnGenKnockout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenKnockoutActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("No of teams:");

        txtNoOfTeam.setEditable(false);
        txtNoOfTeam.setFont(new java.awt.Font("Avenir", 0, 14)); // NOI18N

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(btnGenerateSchedule)
                .addGap(55, 55, 55)
                .addComponent(btnGenKnockout, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbSscheduleSport, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtNoOfTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(lblScdStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 680, Short.MAX_VALUE))
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        kGradientPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel4});

        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 304, Short.MAX_VALUE)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtNoOfTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cmbSscheduleSport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblScdStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerateSchedule)
                    .addComponent(btnGenKnockout))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        jPanel1.add(kGradientPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 800));

        jTabbedPane1.addTab("Schedules", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayout crdLyt = (CardLayout) container.getLayout();
            crdLyt.show(container,"adminWorkspace");
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbSscheduleSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSscheduleSportActionPerformed
        // TODO add your handling code here:
        Sport sport = sd.getSport((String) cmbSscheduleSport.getSelectedItem());
        txtNoOfTeam.setText(String.valueOf(sport.getNoOfTeam()));
        lblScdStatus.setText(sport.getScheduleType());
        populateScheduleTable();
    }//GEN-LAST:event_cmbSscheduleSportActionPerformed

    private void btnGenerateScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateScheduleActionPerformed
        // TODO add your handling code here:
        Sport sport = sd.getSport((String) cmbSscheduleSport.getSelectedItem());
        sport.generateRoundRobinSchedule();
        populateScheduleTable();
    }//GEN-LAST:event_btnGenerateScheduleActionPerformed

    private void btnGenKnockoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenKnockoutActionPerformed
        // TODO add your handling code here:
        Sport sport = sd.getSport((String) cmbSscheduleSport.getSelectedItem());
        sport.generateKnockoutSchedule();
        populateScheduleTable();
    }//GEN-LAST:event_btnGenKnockoutActionPerformed

    private void cmbStandingSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStandingSportActionPerformed
        // TODO add your handling code here:
        populateStandingsTable();
    }//GEN-LAST:event_cmbStandingSportActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CardLayout crdLyt = (CardLayout) container.getLayout();
            crdLyt.show(container,"adminWorkspace");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Sport sport = sd.getSport((String) cmbStandingSport.getSelectedItem());
        ArrayList<Team> teams = sport.getTeamsOfSport();
        for(Team t: teams)
        {
            t.setMatchesPlayed(0);
            t.setMatchesWon(0);
        }
        populateStandingsTable();
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGenKnockout;
    private javax.swing.JButton btnGenerateSchedule;
    private javax.swing.JComboBox<String> cmbSscheduleSport;
    private javax.swing.JComboBox<String> cmbStandingSport;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private javax.swing.JTextField lblScdStatus;
    private javax.swing.JTable tblSchedule;
    private javax.swing.JTable tblStandings;
    private javax.swing.JTextField txtNoOfTeam;
    // End of variables declaration//GEN-END:variables

    private void populateSelect() {
        ArrayList<Sport> sports = sd.getSportsList();
        DefaultComboBoxModel dc = new DefaultComboBoxModel();
    
        for(Sport s: sports)
        {
            dc.addElement(s.getSportName());
        }
        
        cmbSscheduleSport.setModel(dc);
        cmbStandingSport.setModel(dc);
    }

    private void populateScheduleTable() {
        Sport sport = sd.getSport((String) cmbSscheduleSport.getSelectedItem());
        ArrayList<Match> matches = sport.getMatches();
         String venue,date;
        DefaultTableModel df = (DefaultTableModel) tblSchedule.getModel();
        df.setRowCount(0);
        if(sport.getScheduleType() == null) sport.setScheduleType("TBD");
        if(sport.getScheduleType().equals("TBD"))
        {
            return;
        }  
        else{
        for(Match m: matches)
        {
            DateFormat datef = new SimpleDateFormat("dd-MMM-yyyy"); 
               
            if(m.getVenue() == null) venue = "TBD";
            else venue = m.getVenue().getVenueName();
            
            if(m.getDate() == null) date= "TBD";
            else date = datef.format(m.getDate());
            if(date == null) date = "TBD";
            String[] row = {String.valueOf(m.getMatchNo()),String.valueOf(m.getDay()),m.getTeam1().getTeamName(),m.getTeam2().getTeamName(),venue,date};
            df.addRow(row);
        }
        tblSchedule.setModel(df);
        }
    }

    private void populateStandingsTable() {
        Sport sport = sd.getSport((String) cmbStandingSport.getSelectedItem());
        ArrayList<Team> teams = sport.getTeamsOfSport();
        DefaultTableModel df = (DefaultTableModel) tblStandings.getModel();
        df.setRowCount(0);
        Collections.sort(teams, new Comparator<Team>() {
            @Override
            public int compare(Team t1, Team t2) {
                return t2.getMatchesWon()-t1.getMatchesWon();
            }
        });
        for(Team t: teams)
        {
            String[] row = {t.getTeamName(),String.valueOf(t.getMatchesPlayed()),String.valueOf(t.getMatchesWon()),String.valueOf(t.getMatchesLost()),String.valueOf(t.getMatchesWon()*2)};
            df.addRow(row);
        }
        tblStandings.setModel(df);
    }
    
}
